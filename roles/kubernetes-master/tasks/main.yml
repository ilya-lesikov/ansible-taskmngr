---

- name: reset cluster
  shell: "kubeadm reset"
  when: force_kubeadm

- name: initialize cluster with kubeadm
  shell: "kubeadm init --apiserver-advertise-address {{ kube_master_ip }} --pod-network-cidr=10.244.0.0/16"
  register: kubeadm_init
  changed_when: kubeadm_init.rc == 0
  failed_when: kubeadm_init.rc > 0 and kubeadm_init.rc != 2

- name: copy kubeconfig file to enable kubectl
  shell: |
    cp /etc/kubernetes/admin.conf {{ item.home }}/
    chown {{ item.name }}:{{ item.group }} {{ item.home }}/admin.conf
  with_items: "{{ kube_users }}"

- name: specify path via variable to kubeconfig file to enable kubectl
  lineinfile:
    dest: "{{ item.home }}/.bash_profile"
    regexp: '^export KUBECONFIG='
    line: "export KUBECONFIG={{ item.home }}/admin.conf"
  with_items: "{{ kube_users }}"

- name: deploy flannel network in pod with kubectl
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel-rbac.yml
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  register: flannel_out
  until: "'configured' in flannel_out.stdout"
  retries: 25
  delay: 10

- name: configure taints on nodes
  shell: |
    kubectl taint nodes --all node-role.kubernetes.io/master-
  register: result
  changed_when: '"tainted" in result.stdout'
  failed_when: '("tainted" not in result.stdout) and ("not found" not in result.stderr)'

- name: remember the apiserver host-port to use for kubeadm join
  shell: "kubectl -n kube-system get pods | grep kube-apiserver | cut -d' ' -f1 | xargs -I{} kubectl -n kube-system describe pod {} | grep -E '(--advertise-address|--secure-port)' | sort | cut -d'=' -f2 | tr '\n' ':' | cut -d':' -f1,2"
  register: apiserver
  until: apiserver.stdout != ""
  retries: 12
  delay: 10

- name: save apiserver host-port on ansible host in a file (workaround)
  lineinfile:
    dest: "{{ ansible_persistent_facts_file }}"
    regexp: "^apiserver:"
    line: "apiserver: '{{ apiserver.stdout }}'"
  delegate_to: localhost
  become: false

- name: remember the token to use for kubeadm join on other nodes
  shell: "kubeadm token list | sed -n 2p | cut -d' ' -f1"
  register: token
  failed_when: "'failed to list bootstrap tokens' in token.stdout"

- name: save apiserver token on ansible host in a file (workaround)
  lineinfile:
    dest: "{{ ansible_persistent_facts_file }}"
    regexp: "^token:"
    line: "token: '{{ token.stdout }}'"
  delegate_to: localhost
  become: false
