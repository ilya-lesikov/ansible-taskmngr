---

- name: is pubkey authentication possible
  local_action: command ssh -o User={{ ansible_ssh_user }} -o ConnectTimeout=11 -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes {{ inventory_hostname }} echo 'Worked'
  register: result
  ignore_errors: yes
  changed_when: False
  become: false

- name: use password auth if pubkey doesnt work
  connection: local
  set_fact:
    ansible_ssh_extra_args: '-o PreferredAuthentications=password'
  when: result|failed
  changed_when: False
  become: false

- name: get public ssh key
  authorized_key:
    user: "{{ ansible_ssh_user }}"
    key: "{{ lookup('file', '/home/' + ansible_local_user|quote + '/.ssh/id_rsa.pub') }}"
  become: false

- name: permit sudo without password for deploy user
  lineinfile:
    dest: "/etc/sudoers.d/{{ ansible_ssh_user }}"
    create: yes
    state: present
    line: "{{ ansible_ssh_user }} ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"

- name: disable authentication as root
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^PermitRootLogin"
    line: "PermitRootLogin no"
    state: present
  notify: restart ssh

- name: is deploy user locked
  shell: passwd -S "{{ ansible_ssh_user }}" | cut -d' ' -f2
  register: result
  changed_when: false

- name: lock deploy user
  shell: passwd -l "{{ ansible_ssh_user }}"
  when: "result.stdout != 'LK'"

- name: install base packages
  yum:
    name: "{{ item }}"
  with_items: "{{ centos_base_packages }}"

- name: create ansible persistent facts file (workaround)
  file:
    path: "{{ ansible_persistent_facts_file }}"
    state: touch
  delegate_to: localhost
  become: false

