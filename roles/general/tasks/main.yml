---

- name: is pubkey authentication possible
  local_action: command ssh -o User={{ ansible_ssh_user }} -o ConnectTimeout=11 -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes {{ inventory_hostname }} echo 'Worked'
  #command: "( cmdpid=$BASHPID; (sleep 5; kill $cmdpid) & exec ping www.goooooogle.com  )"
  register: result
  ignore_errors: yes
  changed_when: False

# - debug:
#     msg: "{{ ansible_ssh_extra_args }}"

- name: use password auth if pubkey doesnt work
  connection: local
  set_fact:
    ansible_ssh_extra_args: '-o PreferredAuthentications=password'
  when: result|failed
  changed_when: False

# - debug:
#     msg: "{{ ansible_ssh_extra_args }}"

# - fail:

- name: get public ssh key
  authorized_key:
    user: "{{ ansible_ssh_user }}"
    key: "{{ lookup('file', '/home/' + ansible_local_user|quote + '/.ssh/id_rsa.pub') }}"

# - fail:

- name: permit sudo without password for deploy user
  lineinfile:
    dest: "/etc/sudoers.d/{{ ansible_ssh_user }}"
    create: yes
    state: present
    line: "{{ ansible_ssh_user }} ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"
  become: true

# - name: disable password authentication via ssh
#   lineinfile:
#     dest: /etc/ssh/sshd_config
#     regexp: "^PasswordAuthentication"
#     line: "PasswordAuthentication no"
#     state: present
#   become: true
#   notify: restart ssh

- name: disable authentication as root
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^PermitRootLogin"
    line: "PermitRootLogin no"
    state: present
  become: true
  notify: restart ssh

- name: is deploy user locked
  shell: passwd -S "{{ ansible_ssh_user }}" | cut -d' ' -f2
  register: result
  become: true
  changed_when: false

- name: lock deploy user
  shell: passwd -l "{{ ansible_ssh_user }}"
  become: true
  when: "result.stdout != 'LK'"
